include ../menu/advanced.jade
section.panel.content(ng-controller="TradeCtrl")

  //- Disconnected

  group.disconnected(ng-hide="connected")
    p.literal You have to be online to see this screen

  group.disconnected(ng-hide="!connected || loadState.offers")
    p.literal Loading order book...

  //- Connected

  group(ng-show="connected && loadState.offers")
    .settings
      .currency-config
        input.currency#currency_pair(
          name='currency_pair', type='text'
          rp-combobox="pairs_query", rp-combobox-select
          ng-model='order.currency_pair')
      ul.issuers.inline(ng-show='order.first_currency != "XRP"')
        li.label Base currency
        li.value {{order.first_currency}}&ensp;
          span(
            rp-pretty-issuer="order.first_issuer"
            rp-pretty-issuer-contacts="userBlob.data.contacts"
            ) ???
        li: a(
          ng-show='show_issuer_form != "first"'
          ng-click='edit_first_issuer()')
          | change issuer
        li: a(
          ng-show='show_issuer_form == "first"'
          ng-click='show_issuer_form = false')
          | cancel
      ul.issuers.inline(ng-show='order.first_currency == "XRP"')
        li.label Base currency
        li.value XRP
      ul.issuers.inline(ng-show='order.second_currency != "XRP"')
        li.label Counter currency
        li.value {{order.second_currency}}&ensp;
          span(
            rp-pretty-issuer="order.second_issuer"
            rp-pretty-issuer-contacts="userBlob.data.contacts"
            ) ???
        li: a(
          ng-show='show_issuer_form != "second"'
          ng-click='edit_second_issuer()')
          | change issuer
        li: a(
          ng-show='show_issuer_form == "second"'
          ng-click='show_issuer_form = false')
          | cancel
      ul.issuers.inline(ng-show='order.second_currency == "XRP"')
        li.label Counter currency
        li.value XRP
    form.issuer.first-issuer(name='first_issuer_form', ng-show='show_issuer_form == "first"')
      label(for='first_issuer')
        | Base currency issuer
        | ({{order.first_currency}})
      input#first_issuer(
        name='first_issuer', type='text', rp-combobox="issuer_query"
        placeholder='Contact name or Ripple address'
        ng-model='order.first_issuer_edit'
        rp-dest, rp-dest-address, rp-dest-contact)
      .errorGroup(rp-errors='first_issuer')
        .error(rp-error-on='rpDest') Not a valid Ripple address or contact
      p.submitsection
        button.btn.btn-success.submit(
          type='submit', ng-click='save_first_issuer()') Confirm
    form.issuer.second-issuer(name='second_issuer_form', ng-show='show_issuer_form == "second"')
      label(for='second_issuer')
        | Counter currency issuer
        | ({{order.second_currency}})
      input#second_issuer(
        name='second_issuer', type='text', rp-combobox="issuer_query"
        placeholder='Contact name or Ripple address'
        ng-model='order.second_issuer_edit'
        rp-dest, rp-dest-address, rp-dest-contact)
      .errorGroup(rp-errors='second_issuer')
        .error(rp-error-on='rpDest') Not a valid ripple address or contact
      p.submitsection
        button.btn.btn-success.submit(
          type='submit', ng-click='save_second_issuer()') Confirm

    group(ng-hide="order.valid_settings")
      .message
        | You must select an issuer to trade currencies. Click the “change issuer”, link above and enter your trusted gateway address or nickname.

    group(ng-if="order.valid_settings")

      .ticker: ul.market.inline
        li
          span.label Bid =&nbsp;
          span.value
            | {{book.bids[0].TakerGets | rpamountratio:book.bids[0].TakerPays | rpamount:{rel_precision: 2, rel_min_precision: 2} }}
        li
          span.label Ask =&nbsp;
          span.value
            | {{book.asks[0].TakerPays | rpamountratio:book.asks[0].TakerGets | rpamount:{rel_precision: 2, rel_min_precision: 2} }}
        li
          span.label Spread =&nbsp;
          span.value
            | {{book.asks[0].TakerPays | rpamountratio:book.asks[0].TakerGets | rpamountsubtract:(book.bids[0].TakerGets | rpamountratio:book.bids[0].TakerPays) | rpamount:{rel_precision: 2, rel_min_precision: 2} }}
        li
          span.label Last price =&nbsp;
          span.value
            | {{book.last_price | rpamount:{rel_precision: 2, rel_min_precision: 2} }}

      //- Show message if account has not been funded yet.
      .unfunded(ng-hide="account.Balance")
        p.literal You have to be funded before you can trade

      //- 1. Order form
      .order-type(ng-class="{open: order.type}", ng-show="mode == 'trade' && account.Balance")
        .btn-group
          button.btn(
            type="button"
            ng-class="{'btn-info': order.type == 'buy' }"
            ng-click="order.type = 'buy'") Buy {{order.first_currency}}
          button.btn(
            type="button"
            ng-class="{'btn-info': order.type == 'sell' }"
            ng-click="order.type = 'sell'") Sell {{order.first_currency}}
      group.trade-widget(ng-switch="mode", ng-show="account.Balance")
        div(ng-switch-when='trade')
          form.mode-form(name='orderForm', ng-submit='place_order()', ng-class="{visible: order.type}", ng-show="order.showWidget")
            .order-values
              .value-field
                label(for='order_amount', ng-show="order.type == 'sell'") Amount To Sell
                label(for='order_amount', ng-show="order.type == 'buy'") Amount To Buy
                .input-append
                  input#order_amount(
                    name='amount', type='text'
                    ng-model='order.first', ng-change='calc_second()'
                    rp-amount
                    rp-amount-positive
                    rp-amount-xrp-limit
                    rp-amount-xrp-limit-currency="{{order.first_currency}}"
                    required)
                  .add-on {{order.first_currency}}
                .errorGroup(rp-errors='amount')
                  .error(rp-error-on='required') Required
                  .error(rp-error-on='rpAmount') Not a valid amount.
                  .error(rp-error-on='rpAmountPositive') Must be greater than zero
                  .error(rp-error-on='rpAmountXrpLimit') There is a limit of 100 billion XRPs
              .sign x
              .value-field
                label(for='order_price') Price of Each
                .input-append
                  input#order_price(
                    name='price', type='text'
                    ng-model='order.price', ng-change='calc_second()'
                    rp-amount
                    rp-amount-positive
                    rp-amount-xrp-limit
                    rp-amount-xrp-limit-currency="{{order.second_currency}}"
                    required)
                  .add-on {{order.second_currency}}
                .errorGroup(rp-errors='price')
                  .error(rp-error-on='required') Required
                  .error(rp-error-on='rpAmount') Not a valid amount.
                  .error(rp-error-on='rpAmountPositive') Must be greater than zero
                  .error(rp-error-on='rpAmountXrpLimit') There is a limit of 100 billion XRPs
              .sign =
              .value-field
                label(for='order_value') Order Value
                .input-append
                  input#order_value(
                    name='value', type='text'
                    ng-model='order.second', ng-change='calc_first()'
                    rp-amount
                    rp-amount-positive
                    rp-amount-xrp-limit
                    rp-amount-xrp-limit-currency="{{order.second_currency}}"
                    required)
                  .add-on {{order.second_currency}}
                .errorGroup(rp-errors='value')
                  .error(rp-error-on='required') Required
                  .error(rp-error-on='rpAmount') Not a valid amount.
                  .error(rp-error-on='rpAmountPositive') Must be greater than zero
                  .error(rp-error-on='rpAmountXrpLimit') There is a limit of 100 billion XRPs
            .message(ng-show='orderForm.$valid')
              | You are wanting to {{order.type}}
              | {{order.first_amount | rpamount:{precision: 10} }} {{order.first_amount | rpcurrency}}
              | for
              | {{order.second_amount | rpamount:{precision: 10} }} {{order.second_amount | rpcurrency}}
              | ({{order.price_amount | rpamount:{precision: 10} }} {{order.second_amount | rpcurrency}}
              |  per {{order.first_amount | rpcurrency}})
            .submitsection
              button.btn.btn-success.submit(type='submit', ng-disabled='orderForm.$invalid') Place Order
          div(ng-hide="order.showWidget")
            p.literal Your balance is not enough to create an order.

        //- 2. Confirmation

        form.mode-confirm(ng-switch-when='confirm', ng-submit="order_confirmed()")
          p.literal You are about to create an order to {{order.type}}
            .amount_feedback
              span.value {{order.first_amount | rpamount}}
              span.currency  {{order.first_amount | rpcurrency}}
            p.literal for
            .dest_feedback
              span.value {{order.second_amount | rpamount}}
              span.currency  {{order.second_amount | rpcurrency}}
            p.literal Are you sure?
            div
              p.submitsection
                button.btn.back(type='button', ng-click='back()') &laquo; Back
                button.btn.btn-success.submit(type='submit', ng-disabled='confirm_wait') Confirm

        //- 3. Sending

        group.mode-sending(ng-switch-when='sending')
          p.throbber.literal Sending order to Ripple network...

        //- 4. Error

        group.mode-error(ng-switch-when='error')
          p.literal Sorry, an error occurred while submitting your transaction. Make sure you are connected to the Internet and try again later.
          p.literal Before trying again, please ensure that the transaction has not been executed already.
          p: button.btn(ng-click='reset(true)') &laquo; Back

        //- 5. Done

        group.mode-done(ng-switch-when='done')
          group.pending(ng-show='tx_result=="pending"')
            h2.tx-status Your trade request has been submitted.
          group.result-success(ng-show='tx_result=="cleared"')
            h2.tx-status Request has been accepted!
          group.result-error(ng-show='tx_result=="error"')
            h2.tx-status Request has been denied!
            p We were unable to submit the request. Please try again later.
          group.result-malformed(ng-show='tx_result=="malformed"')
            h2.tx-status Request is malformed!
            p Your request is invalid, reason: {{engine_result}} - {{engine_result_message}}
          group.result-malformed(ng-show='tx_result=="claim"')
            h2.tx-status Transaction failed!
            p(ng-switch on="engine_result")
              span(ng-switch-when="tecUNFUNDED_ORDER")
                | You do not have enough {{order.sell_currency}} to create this order.
              span(ng-switch-default)
                | Error: {{engine_result_message}}
          group.result-failed(ng-show='tx_result=="failed"')
            h2.tx-status Trade failed!
            p(ng-switch on="engine_result")
              span(ng-switch-default) Trade failed, reason: {{engine_result_message}}
          hr
          div(class="actionLink")
            a(href="#trade", ng-click="reset(true)") Submit another order

      ul.filter-tabs
        li.my(ng-show="account.Balance"): a(
          ng-click="setListing('my')"
          ng-class="{active: order.listing == 'my'}")
            | My Orders
        li.orderbook: a(
          ng-click="setListing('orderbook')"
          ng-class="{active: order.listing == 'orderbook'}")
            | Order book

      table.table.table-striped.open-orders(ng-show="order.listing == 'my'")
        thead
          tr
            th.type Type
            th.pair Pair
            th.price Price
            th.amount Amount
            th.action Action
        tbody
          tr(ng-repeat="entry in offers", class="{{entry.type}}", ng-class="{cancelled: cancelled}")
            td.type {{entry.type | rpucfirst}}
            td.pair
              .first {{entry.first | rpcurrency}}
                span.issuer(ng-show="entry.first.issuer().to_json()") &nbsp;(
                  span(
                    rp-pretty-issuer="entry.first.issuer().to_json()"
                    rp-pretty-issuer-contacts="userBlob.data.contacts"
                  ) ???
                  | )
              .second {{entry.second | rpcurrency}}
                span.issuer(ng-show="entry.second.issuer().to_json()") &nbsp;(
                  span(
                    rp-pretty-issuer="entry.second.issuer().to_json()"
                    rp-pretty-issuer-contacts="userBlob.data.contacts"
                  ) ???
                  | )
            td.price.rpamount {{entry.second | rpamountratio:entry.first | rpamount:{precision: 5, min_precision: 5} }}
              span.currency {{entry.second | rpcurrency}}
            td.amount.rpamount {{entry.first | rpamount}}
              span.currency {{entry.first | rpcurrency}}
            td.action
              button.btn.btn-danger.btn-small(ng-click='cancel_order()') Cancel
          tr(ng-show="isEmpty(offers)")
            td(colspan="5")
              p.literal You haven&#39;t placed any orders.

      .orderbook(ng-show="order.listing == 'orderbook'")
        div.bids
          span.title Bids
          table.table.table-striped
            thead
              tr
                th.sum Sum
                  .currency {{book.bids[0].TakerPays | rpcurrency}}
                th.amount Size
                  .currency {{book.bids[0].TakerPays | rpcurrency}}
                th.price Bid Price
                  .currency {{book.bids[0].TakerGets | rpcurrency}}
            tbody
              tr(ng-repeat='order in bookFormatted.bids')
                td.sum.rpamount {{order.sum}}
                td.amount.rpamount {{order.TakerPays}}
                td.price.rpamount {{order.price}}
              tr(ng-show='!book.bids.length')
                td(colspan="5") There are currently no bids for this pair.
        div.asks
          span.title Asks
          table.table.table-striped
            thead
              tr
                th.price Ask Price
                  .currency {{book.asks[0].TakerPays | rpcurrency}}
                th.amount Size
                  .currency {{book.asks[0].TakerGets | rpcurrency}}
                th.sum Sum
                  .currency {{book.asks[0].TakerGets | rpcurrency}}
            tbody
              tr(ng-repeat='order in bookFormatted.asks')
                td.price.rpamount {{order.price}}
                td.amount.rpamount {{order.TakerGets}}
                td.sum.rpamount {{order.sum}}
              tr(ng-show='!book.asks.length')
                td(colspan="3") There are currently no asks for this pair.
